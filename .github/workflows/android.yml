name: Android CI

on: 
  push:
    branches:    
      - master         # Push events on master branch
jobs:
  build:
    env:
      BUILD_RESULT: 0
      TEST_RESULT: 0
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    # The following generates a debug APK
    - name: Build with Gradle
      run: ./gradlew assembleDebug

    - name: Check build result
      if: failure()
      run: |
        echo "::set-env name=BUILD_RESULT::1"

    #  The following is Sending message to Slack when build failed
    - name: Slack Notification when build failed
      if: always() && env.BUILD_RESULT==1
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: '#ff0000'
        SLACK_TITLE: ':fire::fire::fire: Build error! :fire::fire::fire:'
        SLACK_MESSAGE: "Build error! Please check github!"
        SLACK_USERNAME: ${{ github.repository }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      uses: rtCamp/action-slack-notify@master
      with:
        args: 'A new commit has been pushed.'

    # The following is running unit tests
    - name: Unit Test
      if: success()
      run: ./gradlew test

    - name: Check build result
      if: failure() && env.BUILD_RESULT==0
      run: |
        echo "::set-env name=TEST_RESULT::1"

    # The following is Archiving code coverage results
    - name: Archive code coverage results
      if: always() && env.BUILD_RESULT==0
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: app/build/reports/tests/testDebugUnitTest

    #  The following is Sending message to Slack
    - name: Slack notification when test failed
      # success() or failure() or always()
      if: failure() && env.BUILD_RESULT==0 && env.TEST_RESULT==1
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: ${{ github.repository }}
        SLACK_COLOR: '#ffff00'
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_TITLE: ':thumbsdown::thumbsdown::thumbsdown: Test error! :thumbsdown::thumbsdown::thumbsdown:'
        SLACK_MESSAGE: "Test error! Please check github!"
        # 'job: ${{ job.status }} \nlatest_comment: ${{ github.event.commits[0].message }} \nlatest_commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}'
      uses: rtCamp/action-slack-notify@master
    - name: Slack notification when test success
      if: success()
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: ${{ github.repository }}
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_TITLE: ':rocket::rocket::rocket: Finished build and test! :rocket::rocket::rocket:'
        SLACK_MESSAGE: "you're doing great!"
        # 'job: ${{ job.status }} \nlatest_comment: ${{ github.event.commits[0].message }} \nlatest_commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}'
      uses: rtCamp/action-slack-notify@master
    
    # The following is uploading debug apk to the deploygate
    #- name: Distribute App
    #  run: |
    #   curl \
    #    -H "Authorization: token ${{secrets.DEPLOYGATE_TOKEN}}" \
    #    -F "file=@app/build/outputs/apk/debug/app-debug.apk" \
    #    -F "message=Any message" \
    #    "https://deploygate.com/api/users/${{secrets.DEPLOYGATE_USER}}/apps"



